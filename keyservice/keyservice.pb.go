// Code generated by protoc-gen-go. DO NOT EDIT.
// source: keyservice/keyservice.proto

package keyservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Key struct {
	// Types that are valid to be assigned to KeyType:
	//	*Key_KmsKey
	//	*Key_PgpKey
	//	*Key_GcpKmsKey
	//	*Key_AzureKeyvaultKey
	//	*Key_NaclboxKey
	KeyType              isKey_KeyType `protobuf_oneof:"key_type"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c1e2c407c293790, []int{0}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

type isKey_KeyType interface {
	isKey_KeyType()
}

type Key_KmsKey struct {
	KmsKey *KmsKey `protobuf:"bytes,1,opt,name=kms_key,json=kmsKey,proto3,oneof"`
}

type Key_PgpKey struct {
	PgpKey *PgpKey `protobuf:"bytes,2,opt,name=pgp_key,json=pgpKey,proto3,oneof"`
}

type Key_GcpKmsKey struct {
	GcpKmsKey *GcpKmsKey `protobuf:"bytes,3,opt,name=gcp_kms_key,json=gcpKmsKey,proto3,oneof"`
}

type Key_AzureKeyvaultKey struct {
	AzureKeyvaultKey *AzureKeyVaultKey `protobuf:"bytes,4,opt,name=azure_keyvault_key,json=azureKeyvaultKey,proto3,oneof"`
}

type Key_NaclboxKey struct {
	NaclboxKey *NaclBoxKey `protobuf:"bytes,5,opt,name=naclbox_key,json=naclboxKey,proto3,oneof"`
}

func (*Key_KmsKey) isKey_KeyType() {}

func (*Key_PgpKey) isKey_KeyType() {}

func (*Key_GcpKmsKey) isKey_KeyType() {}

func (*Key_AzureKeyvaultKey) isKey_KeyType() {}

func (*Key_NaclboxKey) isKey_KeyType() {}

func (m *Key) GetKeyType() isKey_KeyType {
	if m != nil {
		return m.KeyType
	}
	return nil
}

func (m *Key) GetKmsKey() *KmsKey {
	if x, ok := m.GetKeyType().(*Key_KmsKey); ok {
		return x.KmsKey
	}
	return nil
}

func (m *Key) GetPgpKey() *PgpKey {
	if x, ok := m.GetKeyType().(*Key_PgpKey); ok {
		return x.PgpKey
	}
	return nil
}

func (m *Key) GetGcpKmsKey() *GcpKmsKey {
	if x, ok := m.GetKeyType().(*Key_GcpKmsKey); ok {
		return x.GcpKmsKey
	}
	return nil
}

func (m *Key) GetAzureKeyvaultKey() *AzureKeyVaultKey {
	if x, ok := m.GetKeyType().(*Key_AzureKeyvaultKey); ok {
		return x.AzureKeyvaultKey
	}
	return nil
}

func (m *Key) GetNaclboxKey() *NaclBoxKey {
	if x, ok := m.GetKeyType().(*Key_NaclboxKey); ok {
		return x.NaclboxKey
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Key) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Key_KmsKey)(nil),
		(*Key_PgpKey)(nil),
		(*Key_GcpKmsKey)(nil),
		(*Key_AzureKeyvaultKey)(nil),
		(*Key_NaclboxKey)(nil),
	}
}

type PgpKey struct {
	Fingerprint          string   `protobuf:"bytes,1,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PgpKey) Reset()         { *m = PgpKey{} }
func (m *PgpKey) String() string { return proto.CompactTextString(m) }
func (*PgpKey) ProtoMessage()    {}
func (*PgpKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c1e2c407c293790, []int{1}
}

func (m *PgpKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PgpKey.Unmarshal(m, b)
}
func (m *PgpKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PgpKey.Marshal(b, m, deterministic)
}
func (m *PgpKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PgpKey.Merge(m, src)
}
func (m *PgpKey) XXX_Size() int {
	return xxx_messageInfo_PgpKey.Size(m)
}
func (m *PgpKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PgpKey.DiscardUnknown(m)
}

var xxx_messageInfo_PgpKey proto.InternalMessageInfo

func (m *PgpKey) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

type KmsKey struct {
	Arn                  string            `protobuf:"bytes,1,opt,name=arn,proto3" json:"arn,omitempty"`
	Role                 string            `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Context              map[string]string `protobuf:"bytes,3,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Awsprofile           string            `protobuf:"bytes,4,opt,name=awsprofile,proto3" json:"awsprofile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *KmsKey) Reset()         { *m = KmsKey{} }
func (m *KmsKey) String() string { return proto.CompactTextString(m) }
func (*KmsKey) ProtoMessage()    {}
func (*KmsKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c1e2c407c293790, []int{2}
}

func (m *KmsKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KmsKey.Unmarshal(m, b)
}
func (m *KmsKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KmsKey.Marshal(b, m, deterministic)
}
func (m *KmsKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KmsKey.Merge(m, src)
}
func (m *KmsKey) XXX_Size() int {
	return xxx_messageInfo_KmsKey.Size(m)
}
func (m *KmsKey) XXX_DiscardUnknown() {
	xxx_messageInfo_KmsKey.DiscardUnknown(m)
}

var xxx_messageInfo_KmsKey proto.InternalMessageInfo

func (m *KmsKey) GetArn() string {
	if m != nil {
		return m.Arn
	}
	return ""
}

func (m *KmsKey) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *KmsKey) GetContext() map[string]string {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *KmsKey) GetAwsprofile() string {
	if m != nil {
		return m.Awsprofile
	}
	return ""
}

type GcpKmsKey struct {
	ResourceId           string   `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GcpKmsKey) Reset()         { *m = GcpKmsKey{} }
func (m *GcpKmsKey) String() string { return proto.CompactTextString(m) }
func (*GcpKmsKey) ProtoMessage()    {}
func (*GcpKmsKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c1e2c407c293790, []int{3}
}

func (m *GcpKmsKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GcpKmsKey.Unmarshal(m, b)
}
func (m *GcpKmsKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GcpKmsKey.Marshal(b, m, deterministic)
}
func (m *GcpKmsKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GcpKmsKey.Merge(m, src)
}
func (m *GcpKmsKey) XXX_Size() int {
	return xxx_messageInfo_GcpKmsKey.Size(m)
}
func (m *GcpKmsKey) XXX_DiscardUnknown() {
	xxx_messageInfo_GcpKmsKey.DiscardUnknown(m)
}

var xxx_messageInfo_GcpKmsKey proto.InternalMessageInfo

func (m *GcpKmsKey) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type AzureKeyVaultKey struct {
	VaultUrl             string   `protobuf:"bytes,1,opt,name=vault_url,json=vaultUrl,proto3" json:"vault_url,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AzureKeyVaultKey) Reset()         { *m = AzureKeyVaultKey{} }
func (m *AzureKeyVaultKey) String() string { return proto.CompactTextString(m) }
func (*AzureKeyVaultKey) ProtoMessage()    {}
func (*AzureKeyVaultKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c1e2c407c293790, []int{4}
}

func (m *AzureKeyVaultKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AzureKeyVaultKey.Unmarshal(m, b)
}
func (m *AzureKeyVaultKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AzureKeyVaultKey.Marshal(b, m, deterministic)
}
func (m *AzureKeyVaultKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AzureKeyVaultKey.Merge(m, src)
}
func (m *AzureKeyVaultKey) XXX_Size() int {
	return xxx_messageInfo_AzureKeyVaultKey.Size(m)
}
func (m *AzureKeyVaultKey) XXX_DiscardUnknown() {
	xxx_messageInfo_AzureKeyVaultKey.DiscardUnknown(m)
}

var xxx_messageInfo_AzureKeyVaultKey proto.InternalMessageInfo

func (m *AzureKeyVaultKey) GetVaultUrl() string {
	if m != nil {
		return m.VaultUrl
	}
	return ""
}

func (m *AzureKeyVaultKey) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AzureKeyVaultKey) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type NaclBoxKey struct {
	Publickey            string   `protobuf:"bytes,1,opt,name=publickey,proto3" json:"publickey,omitempty"`
	Nonce                string   `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Ephemeralpubkey      string   `protobuf:"bytes,3,opt,name=ephemeralpubkey,proto3" json:"ephemeralpubkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NaclBoxKey) Reset()         { *m = NaclBoxKey{} }
func (m *NaclBoxKey) String() string { return proto.CompactTextString(m) }
func (*NaclBoxKey) ProtoMessage()    {}
func (*NaclBoxKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c1e2c407c293790, []int{5}
}

func (m *NaclBoxKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NaclBoxKey.Unmarshal(m, b)
}
func (m *NaclBoxKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NaclBoxKey.Marshal(b, m, deterministic)
}
func (m *NaclBoxKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NaclBoxKey.Merge(m, src)
}
func (m *NaclBoxKey) XXX_Size() int {
	return xxx_messageInfo_NaclBoxKey.Size(m)
}
func (m *NaclBoxKey) XXX_DiscardUnknown() {
	xxx_messageInfo_NaclBoxKey.DiscardUnknown(m)
}

var xxx_messageInfo_NaclBoxKey proto.InternalMessageInfo

func (m *NaclBoxKey) GetPublickey() string {
	if m != nil {
		return m.Publickey
	}
	return ""
}

func (m *NaclBoxKey) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *NaclBoxKey) GetEphemeralpubkey() string {
	if m != nil {
		return m.Ephemeralpubkey
	}
	return ""
}

type EncryptRequest struct {
	Key                  *Key     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Plaintext            []byte   `protobuf:"bytes,2,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptRequest) Reset()         { *m = EncryptRequest{} }
func (m *EncryptRequest) String() string { return proto.CompactTextString(m) }
func (*EncryptRequest) ProtoMessage()    {}
func (*EncryptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c1e2c407c293790, []int{6}
}

func (m *EncryptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptRequest.Unmarshal(m, b)
}
func (m *EncryptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptRequest.Marshal(b, m, deterministic)
}
func (m *EncryptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptRequest.Merge(m, src)
}
func (m *EncryptRequest) XXX_Size() int {
	return xxx_messageInfo_EncryptRequest.Size(m)
}
func (m *EncryptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptRequest proto.InternalMessageInfo

func (m *EncryptRequest) GetKey() *Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *EncryptRequest) GetPlaintext() []byte {
	if m != nil {
		return m.Plaintext
	}
	return nil
}

type EncryptResponse struct {
	Ciphertext           []byte   `protobuf:"bytes,1,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptResponse) Reset()         { *m = EncryptResponse{} }
func (m *EncryptResponse) String() string { return proto.CompactTextString(m) }
func (*EncryptResponse) ProtoMessage()    {}
func (*EncryptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c1e2c407c293790, []int{7}
}

func (m *EncryptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptResponse.Unmarshal(m, b)
}
func (m *EncryptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptResponse.Marshal(b, m, deterministic)
}
func (m *EncryptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptResponse.Merge(m, src)
}
func (m *EncryptResponse) XXX_Size() int {
	return xxx_messageInfo_EncryptResponse.Size(m)
}
func (m *EncryptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptResponse proto.InternalMessageInfo

func (m *EncryptResponse) GetCiphertext() []byte {
	if m != nil {
		return m.Ciphertext
	}
	return nil
}

type DecryptRequest struct {
	Key                  *Key     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Ciphertext           []byte   `protobuf:"bytes,2,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptRequest) Reset()         { *m = DecryptRequest{} }
func (m *DecryptRequest) String() string { return proto.CompactTextString(m) }
func (*DecryptRequest) ProtoMessage()    {}
func (*DecryptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c1e2c407c293790, []int{8}
}

func (m *DecryptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptRequest.Unmarshal(m, b)
}
func (m *DecryptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptRequest.Marshal(b, m, deterministic)
}
func (m *DecryptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptRequest.Merge(m, src)
}
func (m *DecryptRequest) XXX_Size() int {
	return xxx_messageInfo_DecryptRequest.Size(m)
}
func (m *DecryptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptRequest proto.InternalMessageInfo

func (m *DecryptRequest) GetKey() *Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *DecryptRequest) GetCiphertext() []byte {
	if m != nil {
		return m.Ciphertext
	}
	return nil
}

type DecryptResponse struct {
	Plaintext            []byte   `protobuf:"bytes,1,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptResponse) Reset()         { *m = DecryptResponse{} }
func (m *DecryptResponse) String() string { return proto.CompactTextString(m) }
func (*DecryptResponse) ProtoMessage()    {}
func (*DecryptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c1e2c407c293790, []int{9}
}

func (m *DecryptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptResponse.Unmarshal(m, b)
}
func (m *DecryptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptResponse.Marshal(b, m, deterministic)
}
func (m *DecryptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptResponse.Merge(m, src)
}
func (m *DecryptResponse) XXX_Size() int {
	return xxx_messageInfo_DecryptResponse.Size(m)
}
func (m *DecryptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptResponse proto.InternalMessageInfo

func (m *DecryptResponse) GetPlaintext() []byte {
	if m != nil {
		return m.Plaintext
	}
	return nil
}

func init() {
	proto.RegisterType((*Key)(nil), "Key")
	proto.RegisterType((*PgpKey)(nil), "PgpKey")
	proto.RegisterType((*KmsKey)(nil), "KmsKey")
	proto.RegisterMapType((map[string]string)(nil), "KmsKey.ContextEntry")
	proto.RegisterType((*GcpKmsKey)(nil), "GcpKmsKey")
	proto.RegisterType((*AzureKeyVaultKey)(nil), "AzureKeyVaultKey")
	proto.RegisterType((*NaclBoxKey)(nil), "NaclBoxKey")
	proto.RegisterType((*EncryptRequest)(nil), "EncryptRequest")
	proto.RegisterType((*EncryptResponse)(nil), "EncryptResponse")
	proto.RegisterType((*DecryptRequest)(nil), "DecryptRequest")
	proto.RegisterType((*DecryptResponse)(nil), "DecryptResponse")
}

func init() { proto.RegisterFile("keyservice/keyservice.proto", fileDescriptor_8c1e2c407c293790) }

var fileDescriptor_8c1e2c407c293790 = []byte{
	// 570 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x51, 0x6f, 0xd3, 0x3c,
	0x14, 0x5d, 0xd6, 0xad, 0x5d, 0x6e, 0xa6, 0xb5, 0x9f, 0x35, 0x7d, 0x9a, 0x3a, 0x04, 0x95, 0x9f,
	0x2a, 0x34, 0x79, 0xa2, 0xbc, 0xa0, 0xbd, 0x6d, 0x30, 0x18, 0x8a, 0x84, 0x50, 0x10, 0xbc, 0xa1,
	0x2a, 0xcd, 0xee, 0xba, 0x50, 0xd7, 0x31, 0x4e, 0x52, 0x6a, 0x7e, 0x1a, 0x3f, 0x8d, 0x27, 0x64,
	0xc7, 0x49, 0xda, 0xf2, 0xc2, 0xdb, 0xf5, 0xc9, 0x39, 0xd7, 0xf7, 0x9c, 0xeb, 0x16, 0xce, 0x17,
	0xa8, 0x73, 0x54, 0xab, 0x34, 0xc1, 0xcb, 0xb6, 0x64, 0x52, 0x65, 0x45, 0x46, 0x7f, 0x7b, 0xd0,
	0x09, 0x51, 0x13, 0x0a, 0xbd, 0xc5, 0x32, 0x9f, 0x2e, 0x50, 0x9f, 0x79, 0x23, 0x6f, 0x1c, 0x4c,
	0x7a, 0x2c, 0x5c, 0xe6, 0x21, 0xea, 0xbb, 0xbd, 0xa8, 0xbb, 0xb0, 0x95, 0xe1, 0xc8, 0xb9, 0xb4,
	0x9c, 0x7d, 0xc7, 0xf9, 0x38, 0x97, 0x8e, 0x23, 0x6d, 0x45, 0x2e, 0x20, 0x98, 0x27, 0x72, 0x5a,
	0xf7, 0xea, 0x58, 0x1e, 0xb0, 0x77, 0x89, 0x6c, 0xda, 0xf9, 0xf3, 0xfa, 0x40, 0xae, 0x81, 0xc4,
	0x3f, 0x4b, 0x85, 0x86, 0xbb, 0x8a, 0x4b, 0x5e, 0x58, 0xd1, 0x81, 0x15, 0xfd, 0xc7, 0xae, 0xcd,
	0xa7, 0x10, 0xf5, 0x17, 0xf3, 0xa5, 0xd2, 0x0e, 0x62, 0x87, 0xad, 0x1c, 0x46, 0x18, 0x04, 0x22,
	0x4e, 0xf8, 0x2c, 0x5b, 0x5b, 0xed, 0xa1, 0xd5, 0x06, 0xec, 0x43, 0x9c, 0xf0, 0x9b, 0x6c, 0x5d,
	0xa9, 0xc0, 0x31, 0x42, 0xd4, 0x37, 0x00, 0x47, 0x0b, 0xd4, 0xd3, 0x42, 0x4b, 0xa4, 0xcf, 0xa1,
	0x5b, 0x19, 0x20, 0x23, 0x08, 0x1e, 0x52, 0x31, 0x47, 0x25, 0x55, 0x2a, 0x0a, 0x1b, 0x81, 0x1f,
	0x6d, 0x42, 0xf4, 0x97, 0x07, 0x5d, 0x37, 0xf5, 0x00, 0x3a, 0xb1, 0x12, 0x8e, 0x64, 0x4a, 0x42,
	0xe0, 0x40, 0x65, 0x1c, 0x6d, 0x2c, 0x7e, 0x64, 0x6b, 0xc2, 0xa0, 0x97, 0x64, 0xa2, 0xc0, 0x75,
	0x71, 0xd6, 0x19, 0x75, 0xc6, 0xc1, 0xe4, 0xd4, 0x25, 0xca, 0x5e, 0x57, 0xf0, 0xad, 0x28, 0x94,
	0x8e, 0x6a, 0x12, 0x79, 0x0a, 0x10, 0xff, 0xc8, 0xa5, 0xca, 0x1e, 0x52, 0x8e, 0x36, 0x03, 0x3f,
	0xda, 0x40, 0x86, 0x57, 0x70, 0xbc, 0x29, 0x34, 0x53, 0xd4, 0xdb, 0xf2, 0x23, 0x53, 0x92, 0x53,
	0x38, 0x5c, 0xc5, 0xbc, 0xac, 0xc7, 0xa8, 0x0e, 0x57, 0xfb, 0xaf, 0x3c, 0x7a, 0x01, 0x7e, 0xb3,
	0x01, 0xf2, 0x0c, 0x02, 0x85, 0x79, 0x56, 0xaa, 0x04, 0xa7, 0xe9, 0xbd, 0x6b, 0x00, 0x35, 0xf4,
	0xfe, 0x9e, 0x7e, 0x85, 0xc1, 0x6e, 0xf4, 0xe4, 0x1c, 0xfc, 0x6a, 0x41, 0xa5, 0xe2, 0x4e, 0x72,
	0x64, 0x81, 0xcf, 0x8a, 0x1b, 0xfb, 0x22, 0x5e, 0x36, 0xf6, 0x4d, 0x4d, 0xce, 0xa0, 0xb7, 0x42,
	0x95, 0xa7, 0x99, 0xb0, 0x8f, 0xc0, 0x8f, 0xea, 0x23, 0xfd, 0x06, 0xd0, 0x6e, 0x87, 0x3c, 0x01,
	0x5f, 0x96, 0x33, 0x9e, 0x26, 0xad, 0x99, 0x16, 0x30, 0x96, 0x44, 0x26, 0x92, 0xc6, 0x92, 0x3d,
	0x90, 0x31, 0xf4, 0x51, 0x3e, 0xe2, 0x12, 0x55, 0xcc, 0x65, 0x39, 0xab, 0x1f, 0x9a, 0x1f, 0xed,
	0xc2, 0xf4, 0x2d, 0x9c, 0xdc, 0x8a, 0x44, 0x69, 0x59, 0x44, 0xf8, 0xbd, 0xc4, 0xbc, 0x20, 0xff,
	0xb7, 0xb1, 0x05, 0x93, 0x03, 0x16, 0xa2, 0xae, 0xc2, 0x33, 0x73, 0xf0, 0x38, 0xad, 0x16, 0x66,
	0x6e, 0x3b, 0x8e, 0x5a, 0x80, 0xbe, 0x80, 0x7e, 0xd3, 0x27, 0x97, 0x99, 0xc8, 0xd1, 0xec, 0x2b,
	0x49, 0xe5, 0x23, 0x2a, 0xab, 0xf0, 0xac, 0x62, 0x03, 0xa1, 0x77, 0x70, 0xf2, 0x06, 0xff, 0xe9,
	0xea, 0xed, 0x4e, 0xfb, 0x7f, 0x75, 0xba, 0x84, 0x7e, 0xd3, 0xc9, 0x5d, 0xbe, 0x35, 0xad, 0xb7,
	0x33, 0xed, 0x84, 0x03, 0x84, 0xa8, 0x3f, 0x55, 0x3f, 0x74, 0xf3, 0x10, 0xdd, 0xec, 0xa4, 0xcf,
	0xb6, 0xd3, 0x18, 0x0e, 0xd8, 0x8e, 0x2d, 0xba, 0x67, 0xf8, 0xee, 0x3a, 0xd2, 0x67, 0xdb, 0x16,
	0x86, 0x03, 0xb6, 0x33, 0x09, 0xdd, 0x9b, 0x75, 0xed, 0x3f, 0xc9, 0xcb, 0x3f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xed, 0xdd, 0x83, 0xd0, 0x68, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KeyServiceClient is the client API for KeyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KeyServiceClient interface {
	Encrypt(ctx context.Context, in *EncryptRequest, opts ...grpc.CallOption) (*EncryptResponse, error)
	Decrypt(ctx context.Context, in *DecryptRequest, opts ...grpc.CallOption) (*DecryptResponse, error)
}

type keyServiceClient struct {
	cc *grpc.ClientConn
}

func NewKeyServiceClient(cc *grpc.ClientConn) KeyServiceClient {
	return &keyServiceClient{cc}
}

func (c *keyServiceClient) Encrypt(ctx context.Context, in *EncryptRequest, opts ...grpc.CallOption) (*EncryptResponse, error) {
	out := new(EncryptResponse)
	err := c.cc.Invoke(ctx, "/KeyService/Encrypt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyServiceClient) Decrypt(ctx context.Context, in *DecryptRequest, opts ...grpc.CallOption) (*DecryptResponse, error) {
	out := new(DecryptResponse)
	err := c.cc.Invoke(ctx, "/KeyService/Decrypt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KeyServiceServer is the server API for KeyService service.
type KeyServiceServer interface {
	Encrypt(context.Context, *EncryptRequest) (*EncryptResponse, error)
	Decrypt(context.Context, *DecryptRequest) (*DecryptResponse, error)
}

// UnimplementedKeyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedKeyServiceServer struct {
}

func (*UnimplementedKeyServiceServer) Encrypt(ctx context.Context, req *EncryptRequest) (*EncryptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Encrypt not implemented")
}
func (*UnimplementedKeyServiceServer) Decrypt(ctx context.Context, req *DecryptRequest) (*DecryptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Decrypt not implemented")
}

func RegisterKeyServiceServer(s *grpc.Server, srv KeyServiceServer) {
	s.RegisterService(&_KeyService_serviceDesc, srv)
}

func _KeyService_Encrypt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EncryptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyServiceServer).Encrypt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/KeyService/Encrypt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyServiceServer).Encrypt(ctx, req.(*EncryptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyService_Decrypt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecryptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyServiceServer).Decrypt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/KeyService/Decrypt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyServiceServer).Decrypt(ctx, req.(*DecryptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KeyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "KeyService",
	HandlerType: (*KeyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Encrypt",
			Handler:    _KeyService_Encrypt_Handler,
		},
		{
			MethodName: "Decrypt",
			Handler:    _KeyService_Decrypt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "keyservice/keyservice.proto",
}
